(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[     64680,       1251]
NotebookOptionsPosition[     63412,       1222]
NotebookOutlinePosition[     63842,       1239]
CellTagsIndexPosition[     63799,       1236]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"simpleBinarize", "[", "img_Image", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"gray", ",", "data", ",", "thresh", ",", "binaryData"}], "}"}],
       ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"gray", "=", 
        RowBox[{"ColorConvert", "[", 
         RowBox[{"img", ",", "\"\<Grayscale\>\""}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"data", "=", 
        RowBox[{"ImageData", "[", "gray", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"thresh", "=", 
        RowBox[{"Mean", "[", 
         RowBox[{"Flatten", "[", "data", "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          RowBox[{
          "flatten", " ", "trasforma", " ", "la", " ", "matrice", " ", "in", 
           " ", "1", "d", " ", "e", " ", "mean", " ", "calcola", " ", "la", 
           " ", "media", " ", "dei", " ", "valori"}], "->", " ", 
          RowBox[{
          "px", " ", "con", " ", "val", " ", "sopra", " ", "la", " ", "media",
            " ", "1"}]}], " ", ",", 
         RowBox[{
         "px", " ", "con", " ", "valori", " ", "sotto", " ", "la", " ", 
          "media", " ", "0"}]}], "*)"}], 
       RowBox[{"binaryData", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"#", ">", "thresh"}], ",", "1", ",", "0"}], "]"}], "&"}],
           ",", "data", ",", 
          RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "mappo", " ", "per", " ", "ogni", " ", "elem", " ", "della", " ", 
          "matrice"}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
           "confronto", " ", "ogni", " ", "valore", " ", "con", " ", "la", 
            " ", "soglia", " ", "se"}], " ", ">", " ", "px"}], "=", 
          RowBox[{"1", " ", 
           RowBox[{"(", "bianco", ")"}], " ", "altrimenti", " ", "0", " ", 
           RowBox[{"(", "nero", ")"}]}]}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Image", "[", 
        RowBox[{"binaryData", ",", "\"\<Bit\>\""}], "]"}]}]}], "]"}]}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "tratto", " ", "binaryData", " ", "come", " ", "bit", " ", "cosi", " ", 
      "che", " ", 
      RowBox[{"l", "'"}], "immagine", " ", "finale", " ", "sia", " ", "0", 
      " ", "o", " ", "1"}], ",", " ", 
     RowBox[{"quindi", " ", "binaria"}]}], " ", "*)"}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Esempio", " ", 
     RowBox[{"d", "'"}], "uso"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SetDirectory", "[", 
     RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"img", "=", 
     RowBox[{"Import", "[", "\"\<foto5.jpg\>\"", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"img", "=", 
     RowBox[{"ImageResize", "[", 
      RowBox[{"img", ",", 
       RowBox[{"Scaled", "[", "0.5", "]"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{"imgBin", "=", 
    RowBox[{"simpleBinarize", "[", "img", "]"}]}], "\n"}]}]], "Input",
 CellChangeTimes->{{3.948514877143219*^9, 3.948514884248064*^9}, {
  3.948514922815579*^9, 3.9485149933649473`*^9}, {3.9485150920550137`*^9, 
  3.948515329514988*^9}, {3.9488606966100082`*^9, 3.948860706376953*^9}, {
  3.94886078025898*^9, 3.948860810299061*^9}, {3.949378408606264*^9, 
  3.949378412325001*^9}, {3.9493786254660816`*^9, 3.9493786272421856`*^9}, {
  3.949378815285984*^9, 3.949378871318451*^9}, {3.9493819178343277`*^9, 
  3.9493819384031544`*^9}},ExpressionUUID->"5ec81625-12b3-498e-865b-\
ed98c4dc9d0c"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3MtuZEkVheFIxIDX4C0YwpBp8wSNBMxAapAQb0+7ymVnHF8ywmvvWHH5
P3FxVdk+56z4SRs39O//+q+f/v6bUsq/f/frv/z083//9MsvP//vL0+/+PM/
//O3f/ztlz/89emPy29L+eOvb9wwnadT+XYy5e3vP7/18mff3nr5ZfnxG+Xu
3cvLR79+/JPXT/b97VLu372+zP2fl7vfoZ+JXU/nPp/bfRxVGi/H+lF939+7
VDHdvUMdRRXd9a7oZx2l7uclhrqF+1eey+He//L6wnL/Wcr1Nae8vtfzx95/
IBby5gjvv2y9vvmwn+rV68fXy/Ly4dUflbqf6rOQz5Le6efuNy5fj17+5O3J
3+X42k99jTdfv+6vSD+Le07lGkpVVbn8+90v6n7qD/2gn0I/+3n/O+VS/+l7
/by+fWnu8jlfK6Wf7b3/+lPeBvFxP9U3zjf6OVH5tJ/7f33vv7Jd+nnzMd/f
h4D290k/r7948y33m3e/1Pj8Nv2c4u47m1LqV47X15rLV6y7D76+mj2/TT/H
+9ZS/eXq9vb76esPA14+Erj35seEH3+rTD/4XLn/9umdWOgHbeqvce/+TBJo
9OM1iX4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwidLEfZeY
VVs/BIX3fbEfUsI3ej8UdbKMfgjqHEP6IahtefohpV2486m4x0A3dzLvc6+C
Vu5SPudeB4+4C2nkngkfcIfRzT0YKu4cBO7pcKMfaNwRCNzT4UY/0LgjELin
w41+oHFHIHBPhxv9QOOOQOCeDjf6gcYdgcA9HW70A407AoF7OtzoBxp3BAL3
dLjRDzTuCATu6XCjH2jcEQjc0+FGP5C4G1C4twP9QONuQOHeDvQDjbsBhXs7
0A807gYU7u1AP9C4G1C4twP9QONuQOHeDvQDjbsBhXs70A807gYU7u1AP9C4
G1C4twP9QONuQOHeDvQDjbsBhXs70A807gYU7u1AP9C4G1C4twP9QONuQOHe
DvQDjbsBhXs70A807gYU7u1AP9C4G1C4twP9QONuQOHeDvQDiTsBiXs8rB2Q
ezssnQ/9+LkTkLjHA/1A4k5A4h4P9AOJOwGJezzQDyTuBCTu8UA/kLgTkLjH
A/1A4k5A4h4P9AOJOwGJezzQDyTuBCTu8UA/kLgTkLjHA/1A4k5A4h4P9AOJ
OwGJezzQDyTuBCTu8UA/kLgTkLjHA/1A4k5A4h4P9AOJOwGJezzQDyTuBCTu
8UA/kLgTkLjHg7sAjXs9uAvQuNeDuwCNez24C9C414O7AI17PbgL0LjXg7sA
jXs9uAvQuNeDuwCNez24C9C414O7AI17PbgL0LjXg7sAjXs9uAvQuNeDuwCN
ez24C9C414O7AI17PbgL0LjX67b6/b9hOfYw7vW6bfUwT0addA73et22e7LE
wx3AvV637Z435Bht3Ot1226TAQ+UaOxWAbZbaPgDhcpeJ9x2a1kfSJaxSCr3
YOGTuR9HEzxGPvdg9FMJHiOfezD6qQSPkc89GP1UgsfI5x6MfirBY+RzD0Y/
leAx8rkHo59K8Bj53IPRTyV4jHzuweinEjxGPvdg9FMJHiOfezDyqQSvkc89
GP1UgtfI5x6MfirBa6Rz70U/teA10rn3KtGTuZ9GFDtGPvdehX4qsWPkc+/F
169a8Brp3HvRTy14jXTuveinFrxGOvde9FMLXiOdey/6qQWvkc69F/3UgtdI
596LfmrBa6Rz70U/teA10rn3op9a8Brp3HvRTy14jXTuveinFrxGOvde9FML
XiOdey/6qQWvkc69F/3UgtdI596LfmrBa6Rz70U/teA10rn3op9a8Brp3HvR
Ty14jXTuveinFrxGOvde9FMLXiOdey/6qQWvkc69F/3UgtdI596LfmrBa6Rz
70U/teA1srnnKvRTC14jm3uuQj+14DWyuecq9FMLXiObe65CP7XgNbK55yr0
UwteI5t7rkI/teA1srnnKvRTC14jm3uuwt/+pxa7Rjr3XIV+arFrpHPPxZev
i+A5srnnKrz+1GLXSOeei9efi+A5srnnop+L4Dmyueein4vgObK556Kfi+A5
srnnop+L4Dmyueein4vgObK556Kfi+A5srnnop+L4Dmyueein4vgObK556Kf
i+A5srnnop+L4Dmyueein4vgObK556Kfi+A5srnnop+L4DmSudcq9FMLXiOb
e65CP7XgNbK55yr0UwteI5t7rkI/teA1srnnKvRTC14jm3uuQj8XwXMkc69V
6KcWvEY291yFfmrBa2Rzz1Xopxa8Rjb3XIV+asFrZHPPVeinFrxGNvdchX5q
wWtkc89V6KcWvEY291yFfmrBa2Rzz1Xopxa8Rjb3XIV+asFrZHPPVeinFrxG
NvdchX5qwWtkc89V+NtH1WLXSOeeq9BPLXaNdO65Cv3UYtdI556r0E8tdo10
7rkK/dRi10jnnqvQTy12jXTuuQr91GLXSOeeix//XATPkc09F/1cBM+RzT0X
/VwEz5HNPRf9XATPkc09F/1cBM+RzT0X/VwEz5HNPRf9XATPkcy9VqGfi+A5
krnXKvRzETxHMvdahX4ugudI5l6r0M9F8BzJ3GsV+rkIniOZe61CP7XgNbK5
5yr0UwteI5t7rkI/teA1srnnKvRTC14jm3uuQj+14DWyuecq9FMLXiObe65C
P7XgNbK55yr0UwteI5t7rkI/teA1srnnKvRTC14jm3uuQj+14DWyuecq9FML
XiObe65CP7XgNbK55yr0UwteI5t7rkI/teA1srnnKvRTC14jm3uuQj+14DWy
uecq9FMLXiObe67C376lFrtGOvdchX5qsWukc89V6KcWu0Y691yFfmqxa6Rz
z1Xopxa7Rjr3XIV+arFrpHPPVeinFrtGOvdchX5qsWukc89V6KcWu0Y691z8
+PkieI5s7rno5yJ4jmzuuejnIniObO656OcieI5s7rnopxa8Rjr3XvRTC14j
nXsv+qkFr5HNPVehn1rwGtnccxX6qQWvkc69F/3UgtewWHqxsTcfLniNOay0
WOq95gteY1ITLxZ5awbBa6zKt1jayY4RvMZOxiw29LTjBa+xs5zFrKevC14D
vdwBiNzzHc8dgMg93/HcAYjc8x3PHYDIPd/x3AGI3PMdzx2AyD3f8dwBiNzz
Hc8dgMg93/HcAYjc8x3PHYDIPd/x3AGI3PMdzx2Axr3e8dwBiNzzHc8dgMg9
3/HcAYjc8x3PHYDIPd/x3AGI3PMdzx2AyD3f8dwBiNzzHc8dgMg93/HcAYjc
8x3PHYDIPd/x3AGI3PMdzx2AyD3f8dwBiNzzHc8dgMg93/HcAYjc8x3PHYDI
Pd/x3AGI3PMdzx2AyD3f8dwBiNzzHc8dgMg93/HcAYjc8x3PHYDIPd/x3AGI
3PMdzx2AyD3f8dwBiNzzHc8dgMg93/HcAWjc68FdgMa9HtwFaNzrwV2Axr0e
3AVo3OvBXYDGvR7cBWjc68FdgMa9HtwFaNzrHc8dgMg93/HcAYjc8x3PHYDI
Pd/x3AGI3PMdzx2AyD3f8dwBiNzzHc8dgMg93/HcAYjc8x3PHYDIPd/x3AGI
3PMdzx2Axr0e3AVo3Ovhu19Ponz/51rcuz2w2O0mcwTygHuSj614zxM5u59F
b3sxm/az7p3vZNFTWLz9g8x4Bh31zHj78OrNh4Lw6gv1UBCefbEeAsKTr+dD
QVB/FOG+fViJ9VDQ2QLyIaBzheRDQKcKyoeAzhSWDwGdKDAfAjpPaD4EdJzg
fgjoLNH5ENBR4vMhoINk5EM/50jph4BOkZMPAR0iKx8COgP9QJCXDwGdgH4g
yMyHgLaXmw/97C65HwLaHP1AkJ0PAe2NfiDIz4d+djagHwLaGP1AQT9QjOiH
gLY1JB/62Rb9QEE/UNAPBGPyIaBd0Q8U9AMF/UBBP1DQDxT0AwX9QEE/UNAP
FPQDBf1AQT9Q0A8U9AMJ/UBBPlCM6YeAdkU+kNAPFPQDBflAQT+Q0A8U5APF
tP3Q3xqm7CcmQQwwYT5RFWKE6fqJ+jwYYo18CGhac/UT+bkwwir50M+kJuon
9rNhiFXyIaBJrZIPAU2KfiBZJB/6mdQq/RDQpPz10M/S1siHfqa1Rj8ENC1z
PvSzOm8+9LM8az70sz5nPnwDvQFnPvSzAWM+/PxnC6566GcTrnz4C2CbMNXD
X3/fhicf/vdj27DUQz87GV/Pw4vGXAODDK/nwTXDLoJBBsfz+SVDL4NRRsbz
2fXCL4Rhxh4p+Wxp3GFSD0TUAxHtAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAKOVH57ect8MllN6uG8W0+nqh9ZQS8uHyo7g7qeHeyu85W4iknvL
E7nPfAT3xjtzn+0I7o135j7bEdwb78x9tiO4N96Z+2xHcG+8M/fZjuDeeGfu
sx3BvfHO3Gc7gnvjnbnPdgT3xjtzn+0I7o135j7bEdwb78x9tgO4J96a+3AH
cE+8NffhjuDeeGfusx3APfHW3Ic7gHvirbkPdwD3xB1a73aeZ3If7gDuiTu0
3e9MD2U92THcE3doueO5nsp1qAO5J+7w+JZneyjPkQ7lnrjDo5ue76HGH+dw
7ok7PLjrCR9q9GEauCfu8OmNT/lQA8/RxT1xh0/ufNKHGnWIRu6JO3x479M+
1IgDNHNP3O6ju5/4oZLPbgbuidt9cPszP1Tqyc3BPXG7BR8q7dTm4Z643YIP
lXZq83BP3G7Bh0o7tXm4J2633kOlHdpE3Bu3W++h0g5tIu6N2633UGmHNhH3
xu0WfKi0U5uHe+J2Wz7UnbQjTuVerd2WD/VVaT30cg/RbsuHypNWzKpTb/lQ
M/ngLwZtMvWWD7Wadafe8z8UGKOrHgpCrTsfAsKLL9RDQXj2xXooCE+EfAjo
eFI9FHQ6OR8COldAPBR0rqh8COhIcflQ0HlC6yGg40T3Q0CHISBIyAca8oGE
eiAhH2ioBxLygYZ6IKEeaMgHEuqBhHqgIR8oqAcS+oGCfqCgHwg68qEfvEU/
EPD6AwX5QEE/UNAPFPQDxTT9kOeSZuiHV7t1fXB0o07U+YqHAB8e2oDT/Dwe
GlrBJ8eVe5JN8ZDQ7D47qrxj7IiHgqb2+THlHGJvPRQ0r0dHFH+EX6mHgmb1
8HiCD/Cr9VDQnBqOJvD4lHooaEZNxxJ0eGo9BDShpjMJObuAfAjoWCH1UNCp
wvIhoBMF5kNB54nNh4AOE50PAR0lPh/6OUdCPRR0jqR8COgMafnQzwny8iGg
A2TmQ0D7y+2HgDaXnA8B7S09H/rZWX4+BLSxEfkQ0L7G9ENAmxqUD/1salQ/
BLSlYfnQz47G5UNAO6IfCEbmQ0D7oR8IxuZDQLuhHwhG50NAe6EfKOgHgvH5
ENBO6AcCRz70sw9LPwS0DfqBwJMP/ezC1A8BbYJ+IHDlQz97oB8o6AcK+oHC
1g8BbYF+oKAfCHz50M8O6AcK+oGCfqCgHyjoBwr6gYJ+oKAfKOgHAmM+9LMB
+oGEfqCgHyjIBwr6gYJ+IKEfKOgHAvKBhH6goB8o6AcK+oGEfKCgHyjoBxLy
gYJ+oCAfKOgHEvqBgn6gIB9IyAcS+oGCfCChHyjIBxL6gWLmfEhuAdPm47gm
uunHlHSWlouiW8A5ZZyk6bLoFnJS4efoui66hRxV8DH6roxeQWcVeoq+K6Nb
0GEFHqLz2ugWdlxBR2i9OPrFHVjICZovj26BJ6afn/v66BZ5ZPLx+e8AvULP
TDu8CW4B3WJPTTm7KW4CvYKP7csnN8ltoNcc5xZ9F/QzzBTHFnsTwo2gn//Q
4u5Avxd0sx9Z1A2E3Ay6mU8s5vJht4N+zuPSrx19R+jnO6uYWmLvCd1cRxWV
S+xdoZ/nmEKTibwxdDMcUng1gfeGbqNPKKWbsLtDv7Hnk9ZO1A2i37ijyc2H
foyGHEtyPwTklX0c2fnQz9bS8yGgrdEPBAPyIaCN0Q8EQ/IhoF0Nyod+NjWq
HwLa0rB8CGhL9APBwHwODWjvCegnzwFLDEtnr9keO2OKAcnsN9pjx6yRGsue
kz12zh5Zley6V4OjFkkIZOe5Ghw1SXQbW4/V4qxNQrvYfawGp40SlsQBWzU4
bZWYGk5YqsV5swSkcMZQLc7bJeCJzxiqxYHDxDzy9jM1OXCZqEfefKYmBy4T
98hbz9TkwGUiH3nfldqcOE3sM++6Uoszpwl/6h1HanLkNvEPvd9Gbc7cJuGp
9xupxaHbpDx2H/cEIU7dJum5d5qoybHrZD34Pgu1OHedtCffZaAWJ++T+Oxb
7NPi5H0Sn32HeVqcvVDq0y+/TouzF0p9+tXHaXH6RsnPv/I0LY4fKXuAhadp
wUrpC6w6TBNmSl9g1WFasBP//y8FO91MAbkfOgRDPRmxwnqrtGCqJ0NWWG2U
Jkz1zZAZFtukCVt9M2SGxTZpwVjPBg2x0CJNWOuHQUusM0gT5vph0BLrDNKE
uX4YtMQye7RhrxeDplhmjxbs9WrUFqvs0YK97owaY5E5WrDYPcboNWqxNSZj
jF6jFltkMrboNGawZTZji05jBltnM6boM2KvlUZjij4j9lpqNJbokj/XYqsx
RJf0uZabjSF6ZK+13moM0SN5rRVnY4gOuWMtORs7dEgda9HdmKFd4lbLDscM
7RK3Wnc4VmiXttXCwzFDu7StVh6OFZolTbX2cozQLGeq1ZdjhVYpSy2/HCM0
y5hq/ekYoVXCUhssxwit4pfaYjpGaBW+1B7TsUGj4KF2mY4NWsUutc12bNAo
dKh9pmODRpFD7bQdGzQKHGqn6digUdxQe23HBI2ihtpsOzZoFbXUZtsxQaOY
obbbjg1axSy13XRs0ChiqB23Y4JG+lDnbve+w56efKAgH0joBxLygYR8ICEf
SMgHEuqBgnygIR9IyAcS8oGEeqAhH0ioBxrqgYZ6oKEeiIgHGuqBjHQgIx0A
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwATK
r/8oxX0XCPR8mgWT+HYU3ibo4RS3h6m9vIP7Vo/zaHFOBAr6gYJ+AAAAAAAA
2vwfXXPaIg==
    "], {{0, 1024.}, {576., 0}}, {0, 1},
    ColorFunction->GrayLevel],
   BoxForm`ImageTag["Bit", ColorSpace -> Automatic, Interleaving -> None],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{576., 1024.},
  PlotRange->{{0, 576.}, {0, 1024.}}]], "Output",
 CellChangeTimes->{3.948514887037537*^9, 3.9493783909469604`*^9, 
  3.949378886456064*^9, 3.949381898253769*^9},
 CellLabel->
  "Out[267]=",ExpressionUUID->"e043a49c-8e2d-4d42-ad42-f312c84b710b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"simpleDilation", "[", 
     RowBox[{"img_Image", ",", 
      RowBox[{"se_", "?", "MatrixQ"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "data", ",", "dims", ",", "seDims", ",", "offset", ",", "padded", ",", 
        "result", ",", "window"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"data", "=", 
        RowBox[{"ImageData", "[", "img", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"dims", "=", 
        RowBox[{"Dimensions", "[", "data", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"seDims", "=", 
        RowBox[{"Dimensions", "[", "se", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Calcola", " ", 
         RowBox[{"l", "'"}], "offset", " ", "per", " ", "il", " ", "padding", 
         " ", 
         RowBox[{"(", 
          RowBox[{"per", " ", "gestire", " ", "i", " ", "bordi"}], ")"}]}], 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"offset", "=", 
        RowBox[{"Floor", "[", 
         RowBox[{"seDims", "/", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Aggiunge", " ", "un", " ", "padding", " ", "di", " ", "zeri", " ", 
         "intorno", " ", 
         RowBox[{"all", "'"}], "immagine"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"padded", "=", 
        RowBox[{"ArrayPad", "[", 
         RowBox[{"data", ",", "offset", ",", "0"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Applica", " ", 
         RowBox[{"l", "'"}], "operazione", " ", "di", " ", "dilatazione", " ",
          "per", " ", "ogni", " ", "pixel"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"result", "=", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"window", "=", 
            RowBox[{"padded", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"i", ";;", 
                RowBox[{"i", "+", 
                 RowBox[{"seDims", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], ",", 
               RowBox[{"j", ";;", 
                RowBox[{"j", "+", 
                 RowBox[{"seDims", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "-", "1"}]}]}], "]"}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
            "Estrae", " ", "una", " ", "finestra", " ", "da", " ", "padded", 
             " ", "della", " ", "stessa", " ", "dimensione", " ", "della", 
             " ", "matrice", " ", "strutturante"}], "*)"}], 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Max", "[", 
               RowBox[{"window", "*", "se"}], "]"}], "==", "1"}], ",", "1", 
             ",", "0"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"dims", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", 
            RowBox[{"dims", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
           "Dato", " ", "che", " ", "il", " ", "padding", " ", "ha", " ", 
            "\"\<larghezza\>\"", " ", 
            RowBox[{"seDims", "/", "2"}]}], ",", " ", 
           RowBox[{
           "la", " ", "finestra", " ", "risulta", " ", "sempre", " ", 
            "centrata", " ", "sul", " ", "pixel", " ", 
            RowBox[{
             RowBox[{"data", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j"}], "]"}], "]"}], "."}]}]}], "*)"}], 
         "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"Image", "[", 
        RowBox[{"result", ",", "\"\<Bit\>\""}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\n", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Esempio", " ", 
    RowBox[{"d", "'"}], "uso", " ", "con", " ", 
    RowBox[{"DiskMatrix", "[", "2", "]"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"img", "=", 
   RowBox[{"Import", "[", "\"\<foto5.jpg\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"img", "=", 
   RowBox[{"ImageResize", "[", 
    RowBox[{"img", ",", 
     RowBox[{"Scaled", "[", "0.5", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"imgBin", " ", "=", " ", 
   RowBox[{"Binarize", "[", "img", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"imgFilt", "=", 
   RowBox[{"GaussianFilter", "[", 
    RowBox[{"imgBin", ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"imgEnhanced", "=", 
   RowBox[{"ImageAdjust", "[", "imgFilt", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"edges", "=", 
   RowBox[{"EdgeDetect", "[", "imgEnhanced", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"dilatedEdges", "=", 
  RowBox[{"simpleDilation", "[", 
   RowBox[{"edges", ",", 
    RowBox[{"DiskMatrix", "[", "2", "]"}]}], "]"}]}], "\n"}], "Input",
 CellChangeTimes->{{3.94851545976692*^9, 3.948515534491626*^9}, {
   3.948515591300206*^9, 3.9485156076243267`*^9}, {3.948515638039605*^9, 
   3.948515641388238*^9}, {3.948515722379218*^9, 3.9485158217938623`*^9}, {
   3.9485158683900623`*^9, 3.948515923019199*^9}, {3.9493788953194675`*^9, 
   3.9493789341360493`*^9}, 3.9493789828815327`*^9, {3.9493792256140785`*^9, 
   3.9493792686707516`*^9}, {3.9493796537264786`*^9, 
   3.9493797204075775`*^9}, {3.949379780601038*^9, 3.9493798072813435`*^9}, 
   3.9493798876031513`*^9, {3.9493799294121475`*^9, 3.949379930372038*^9}, {
   3.949379975420397*^9, 3.949379977756315*^9}, {3.9493800164773407`*^9, 
   3.949380019742096*^9}, {3.949381652941784*^9, 3.949381653829239*^9}, {
   3.9493817033342056`*^9, 3.9493817799364967`*^9}, {3.949381812656908*^9, 
   3.949381817488537*^9}, {3.949381956187681*^9, 
   3.949382037997057*^9}},ExpressionUUID->"dff829f8-35e2-4f43-ad01-\
af4bda31e3ac"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3EtubMl1hWEewQ1PQ7NQ0266K41AAiT3bKBswPDspXoqMpmZ5xGPvf99
/q9hyMXLkytirUqSV4R+/5f//uPffvf19fU///qP//PHP//fv//ww5///08/
/j//8V//+9f//OsPf/jLjx/++pevr3/76T9IkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkqRMtveioym7D+NxUtpzej5uSY2+
/bimuxu5Hzd1O59bdlD67HSnbkmNrhrd0u0NrM4l3dDkwtxRcauLcke1RBbk
kPDS9OK7ElLCKtwQSOIWHBAAoAT3kxipBPeTD7YE95MCuAQHlAC4A/eTALkD
cvYqyB2Qs1dB7oCcvQpyB+TsVZA7IGevgtwBOXsV5A7I2asgd0DOXgW5A3L2
KsgdkLNXQe6AnL0Kcgfk7FWQOyBnr4LcATl7FeQOyNmrIHdAzl4FuQNy9irI
HZCzV0HugJy9CnIH5OxVkDsgZ6+C3AE5exXkDsjZqyB3QM5eBbkDcvYqyB2Q
s1dB7oCcvYiN3AE5exHuRz3QFaDD14CuAB2+BnQF6PA1oCtAh68BXQE6fA3o
CtDha0BXgA5fA7oCdPgayBWg/+6zCHIF7iceuQJy9irIHZCzV0HugJy9CnIH
5OxVkDsgZ6+C3AE5exXkDsjZqyB3QM5eBbkDcvYqyB2Qs1dB7oCcvQpyB+Ts
VZA7IGevgtwBOXsV5A7I2asgd0DOXgW5A3L2KsgdkLNXQe6AnL0Kcgfk7FWQ
OyBnr4LcATl7FeQOyNmL2MgdkLMX4X7UA10BOnwN6ArQ4WtAV4AOXwO6AnT4
GtAVoMPXgK4AHb4GdAXo8DWgK0CHrwFdATp8DegK0OFrQFeADl8DugJ0+BrQ
FaDD14CuAB2+BnQF6PA1oCtAh68BXQE6fA3oCtDha0BXgA5fA7oCdPga0BWg
w9eArgAdvgZ0BejwNaArQIevAV0BOnwN6ArQ4WtAV4AOXwO6AnT4GtAVoMPX
gK4AHb4GdAXo8DWgK0CHrwFdATp8DegK0OFL2NAVoMOX4H7Ug90AO30F7Aag
6aGxX2EfhZh+eyM61zXg6F/I9O/mA90SLO4TYPpD++FMKnO2fbz0V+eTdWS8
Blq89L8WPXdH6+bEa6DFS/8uMXVLvAZavPRHEpOGxGugxUt/MXHaCfEaaOHS
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
VZj7UY8F5Xa9hMvLbdV+rn7er4an0hjT67n0Att3U8KpV8b9vFiPC0pqdjXj
5uOCUprczPnHv5+PA0pobjFd8/nwj5TG1GJOP/zNUhxQWjN7uTyfMx9RrIm9
nH30p5E4oKTm9XL17efCBxVnVi+nC9/5BAeU06xeLr79DHyglpgzoItvP31/
QhFm9HJ+lO6HasIb0IVHHvgEB5TT8AFd+Wnb/XANHtDl+bgfpiuFD37aoU9x
P0mNHNC1Zx36FPeT1bgBXXyS+2EbNaCrz3E/cNuQBV1+iN8/040Y0PVHuB+8
7gH1PODwfi4l0wpb34JGfPb+H7n0cK3RMYHO8fnff5VwdQVb73yO/v6G+8nt
0hAGrGd/H86HYTu5hu3sJ3x+0M7L9LyAlthOLOLMnz34uhc+qFy2Z5f/0JWX
PfkhJfRtHA/lff5o/6u+TTPiRbTEq428N/o19/+pslu9nueXfPkPhLJwO7uv
N/aVtMraRl1PTcvqdD7q43rUzelIkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiQphW1PdEDltTueU6JPo8XGzseJ3c36/RwXfTfaF72RAaKv8M6OVBA6jn6L
bvKexl5x7FDeG3U+PVt+vQ6olMS3634A+LfrfiKVv10HNFX9y3U/M93gcm9w
xDg3uNwbHDHODS73BkeMc4PLvcER49zgcm9wxDB3+OHkBkcM437U4w53e4cz
RrnD3d7hjFHucLd3OGOUO9wt6Yy070dhcS8BnfHY7wsk+q+E0wSZCHTGQ79w
kumXUrLkmAl0xm3bXdD+n1gpS46ZQGfctp0F7X18tSw5ZuKccds+D2jv4+sl
iTEV54y/rOLNQp7Xk+FQSWJMxTnjb0lfbORpN0kOlSTGVJwzNkmfB/S8qCSH
ShJjKs4Z26QPg/n+fpTkUEliTMU542PS79/vPH8wIuOjJDGm4pzxOenb9aQ5
VJIYU3HO+C3p2/lkOVSSGFNxzvgi6ev1pDlUkhhTcc74Mumr9aQ5VJIYU3HO
eCJpkkO9HnctnCNS95MgyEScE/L28/5//SQ62Dic4xxPmqajt/vZFx39KE7Y
e+2HMrbo1z/sxE3lOdOqAR0x8YBTHj3YiaSpzhS0liGOnm7+LfY7ETT7maLm
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
zDegyW9uAdzPN9P3M+XRQdYciHVv09LWe/txPy9M3s+EB8dZcyTYxU2KC7uF
QxbuZ/aLjDPnUgp+9XI/r025lYrzWVMt7uZmBC759rOmW97NTUjMu4RDlu1n
7ksMNv5Wis7H33h5bXTmol+9vla0S7y6OfsZ97w8pp+MeXVjU9d9+3E/r83Y
z6in5TL5bNSrG5mbegeHuJ+XBn7JKfzV60dTT8e9utH7GfGklNzPS8PeNYq/
/fgbU2+M3U//c9JyP6+NCY++gmOmHZF9d+7noFlHpH/l3/YdfMKSuHEmHZJ+
dwf2c1D0SSabc0r+3Tmfg2acs8DduZ+DJpyzxNU5n4OGn7TO1X04htv5zeDj
3uz2NLbxu/3bp6GVO58bGle687mlUbU7n5saU7zzua0BP3Xe7gdXNbrbdz73
1tm/87m7nr85vd/fuuq7qyNwPfrJtSE4H/1iO72F7fynqLBTe9hcj55sR0dx
+A/qXrb9ZWzPVmdUZh/n8e2DrkfPXozkreisysjxqJPbUSfHo25OR5IkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZKkw/4OEt9ZmQ==
    "], {{0, 1024.}, {576., 0}}, {0, 1},
    ColorFunction->GrayLevel],
   BoxForm`ImageTag["Bit", ColorSpace -> Automatic, Interleaving -> None],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{576., 1024.},
  PlotRange->{{0, 576.}, {0, 1024.}}]], "Output",
 CellChangeTimes->{{3.9493796952356606`*^9, 3.949379722607767*^9}, {
   3.949379782287424*^9, 3.949379790994259*^9}, 3.9493819039287453`*^9},
 CellLabel->
  "Out[276]=",ExpressionUUID->"90030d4e-3659-3a45-b8e6-d531da7ad54c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"simpleFillingTransform", "[", "img_Image", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "data", ",", "dims", ",", "compImg", ",", "binImg", ",", "comp", ",", 
         "borderIDs", ",", "holeMask", ",", "filledData"}], "}"}], ",", 
       RowBox[{"(*", 
        RowBox[{
        "Estrae", " ", "la", " ", "matrice", " ", "dei", " ", "pixel", " ", 
         RowBox[{"dall", "'"}], "immagine", " ", "binaria"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"data", "=", 
         RowBox[{"ImageData", "[", "img", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"dims", "=", 
         RowBox[{"Dimensions", "[", "data", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Crea", " ", 
          RowBox[{"l", "'"}], "immagine", " ", 
          RowBox[{"complementare", ":", 
           RowBox[{"inverte", " ", "i", " ", "valori", " ", 
            RowBox[{"(", 
             RowBox[{"0", "\[LeftRightArrow]", "1"}], ")"}]}]}]}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"compImg", "=", 
         RowBox[{"1", "-", "data"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Converte", " ", "compImg", " ", "in", " ", 
          RowBox[{"un", "'"}], "immagine", " ", "binaria", " ", "e", " ", 
          "calcola", " ", "le", " ", "componenti", " ", 
          RowBox[{"connesse", "."}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"binImg", "=", 
         RowBox[{"Image", "[", "compImg", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"comp", "=", 
         RowBox[{"MorphologicalComponents", "[", "binImg", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Identifica", " ", "gli", " ", "ID", " ", "delle", " ", "componenti",
           " ", "che", " ", "toccano", " ", "il", " ", "bordo", " ", 
          RowBox[{"dell", "'"}], "immagine"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"borderIDs", "=", 
         RowBox[{"DeleteDuplicates", "[", "\[IndentingNewLine]", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"comp", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "All"}], "]"}], "]"}], ",", 
             RowBox[{"(*", 
              RowBox[{"prima", " ", "riga"}], "*)"}], "\[IndentingNewLine]", 
             RowBox[{"comp", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"dims", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", "All"}], "]"}], "]"}], 
             ",", 
             RowBox[{"(*", 
              RowBox[{"ultima", " ", "riga"}], "*)"}], "\[IndentingNewLine]", 
             RowBox[{"comp", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{"(*", 
              RowBox[{"prima", " ", "colonna"}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"comp", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", 
                RowBox[{"dims", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}]}], "  ", 
            RowBox[{"(*", 
             RowBox[{"ultima", " ", "colonna"}], "*)"}], 
            "\[IndentingNewLine]", "}"}], "]"}], "\[IndentingNewLine]", 
          "]"}]}], ";", 
        RowBox[{"(*", 
         RowBox[{"scopo", " ", ":", " ", 
          RowBox[{
          "identificare", " ", "quali", " ", "componenti", " ", "non", " ", 
           "devoono", " ", "essere", " ", "riempite", " ", "perch\[EGrave]", 
           " ", "connesse", " ", "a", " ", "esterno"}]}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"holeMask", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "!=", "0"}], "&&", 
               RowBox[{"Not", "[", 
                RowBox[{"MemberQ", "[", 
                 RowBox[{"borderIDs", ",", "#"}], "]"}], "]"}]}], ",", "1", 
              ",", "0"}], "]"}], "&"}], ",", "comp", ",", 
           RowBox[{"{", "2", "}"}]}], "]"}]}], ";", " ", 
        RowBox[{"(*", 
         RowBox[{"#", "!=", 
          RowBox[{"0", " ", "significa", " ", "#", " ", "con", " ", "ID"}], 
          " ", "!=", " ", 
          RowBox[{
          "0", " ", "cio\[EGrave]", " ", "non", " ", "lo", " ", "sfondo"}]}], 
         "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"filledData", "=", 
         RowBox[{"MapThread", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Max", "[", 
             RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", 
           RowBox[{"{", 
            RowBox[{"data", ",", "holeMask"}], "}"}], ",", "2"}], "]"}]}], 
        ";", " ", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"OR", " ", "pixel", " ", "a", " ", "pixel"}], ",", " ", 
          RowBox[{
           RowBox[{"sommo", " ", "edges"}], " ", "+", " ", 
           RowBox[{"hole", " ", "mask"}]}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"ricostruisce", " ", 
          RowBox[{"l", "'"}], "immagine", " ", "binaria", " ", "riempita"}], 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Image", "[", 
           RowBox[{"filledData", ",", "\"\<Bit\>\""}], "]"}], ",", "binImg", 
          ",", 
          RowBox[{"Colorize", "[", "holeMask", "]"}], ",", 
          RowBox[{"Colorize", "[", "data", "]"}]}], "}"}]}]}], "]"}]}], ";"}],
    "\n", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SetDirectory", "[", 
     RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"img", "=", 
     RowBox[{"Import", "[", "\"\<fototag.png\>\"", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"img", "=", 
     RowBox[{"ImageResize", "[", 
      RowBox[{"img", ",", 
       RowBox[{"Scaled", "[", "0.5", "]"}]}], "]"}]}], ";"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"imgBin", "=", 
     RowBox[{"Binarize", "[", "img", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"imgFilt", "=", 
     RowBox[{"GaussianFilter", "[", 
      RowBox[{"imgBin", ",", "1"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"imgEnhanced", "=", 
     RowBox[{"ImageAdjust", "[", "imgFilt", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"edges", "=", 
     RowBox[{"EdgeDetect", "[", "imgEnhanced", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"dilatedEdges", "=", 
     RowBox[{"Dilation", "[", 
      RowBox[{"edges", ",", 
       RowBox[{"DiskMatrix", "[", "1", "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"filledImage", "=", 
    RowBox[{"simpleFillingTransform", "[", "dilatedEdges", "]"}]}], 
   "\n"}]}]], "Input",
 CellChangeTimes->{{3.948516559635272*^9, 3.9485166402631197`*^9}, 
   3.948516670666363*^9, {3.9485167266113787`*^9, 3.948516745852313*^9}, {
   3.948516785450446*^9, 3.948516817816391*^9}, {3.948516892827416*^9, 
   3.948516905479906*^9}, {3.948516943900197*^9, 3.948516947456171*^9}, {
   3.9485169940662746`*^9, 3.948516995398211*^9}, {3.9485178081804132`*^9, 
   3.948517810018867*^9}, 3.948860869509321*^9, {3.9488609178378105`*^9, 
   3.9488609679507046`*^9}, 3.948861615852028*^9, {3.9488616831804886`*^9, 
   3.9488616965017605`*^9}, {3.948861775647028*^9, 3.948861786790798*^9}, 
   3.9488619279941807`*^9, {3.948861979035904*^9, 3.9488619794345913`*^9}, {
   3.9488620675727367`*^9, 3.948862069357025*^9}, {3.9488621518871117`*^9, 
   3.948862161510664*^9}, {3.948862261489006*^9, 3.94886228668861*^9}, {
   3.948862319882143*^9, 3.9488623220971203`*^9}, 3.948862436083355*^9, 
   3.9488625025730247`*^9, {3.948862558542902*^9, 3.948862563189787*^9}, {
   3.949380153241228*^9, 3.9493801696731415`*^9}, {3.949380257003067*^9, 
   3.949380271362465*^9}, {3.949380459836344*^9, 3.949380475087513*^9}, {
   3.9493807083323746`*^9, 3.949380741187992*^9}, {3.949380822862114*^9, 
   3.9493808262946796`*^9}, {3.949380985520876*^9, 3.9493810165779934`*^9}, {
   3.9493812735473194`*^9, 3.949381275407261*^9}, {3.9493813724496613`*^9, 
   3.9493814928901386`*^9}, {3.9493815651244297`*^9, 
   3.9493815817881126`*^9}, {3.9493816297017155`*^9, 
   3.9493816299570713`*^9}, {3.9493820639094887`*^9, 3.949382084766344*^9}, {
   3.9495524545295277`*^9, 3.9495524582102757`*^9}, {3.9505209475678787`*^9, 
   3.9505209675242596`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"55a5e8ca-9f16-4a93-9918-c24e1c7e6652"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt3MHKbEcVhuE/4sDb8C4c6tBpvIIE1JlCFMS715MEo8RzuqrXqlpVaz/P
QBShe+9vvbQhePLrb//69Z9+8fHx8bdf/ftfvv7mH7/77rtv/vmHT//h93/5
+x///MfvfvPtp//645cfH7/9/t8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHCtr75X/RS84asxRzwE15IP
Ecv7EdGdBu+7vh/aWn5e/XS2/ufBD1Bn+iFiw3X109eOHwc/QH3phwj9ELHl
tPrpas9Pg3662taPgFrac1j9dLXpsPppSj9E6IcI/RCxrx8BNbTrrvrpadtd
9dOSfojQDyH++ocI/RDh7/8QoR8iNv0Pi36a8v//IUQ/ROiHiC2nlU9b+iHC
n/8iZM+ff9dPV/75CUT457cQsvy8737B7D+IjxJn9vPVzyx4MhKsvs07n//z
ehR0rMWnmf/4/1+Pgg619jCZ+QjoSEsPM/3hX8pHQCdaeZfkfAR0onV3mT75
q3wEdKB1d0n/+dHPiVbdZcHPj4AOtOouC35+9HOiNYdZko+ATrTiLvPH1s+t
FhzmjY/Uz7XSL/POrfVzr+TTvHVq/dwr9zYL8xHQmTJv895n6edqecd585P0
c7es67z7Ofq5XM593v4Q/dwu40CBj5DP9aInCt1YP/eL3Sh2Yv00ELhS9MD6
6eDtO8XvK58W3jpVxnn108P0sbKuK58mpg6Wd1z99DF4s9zTyqeRV4dbcVn9
dPLZ8607q3p6efGDkH9V+fSz9aTyaWrbNdVDjHoI0w4AAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAT/bVl1U/Hid7
Ec+o6tegSFI/Knuorf2Mqh6FUdWlRFXv93TV91+veuHeqq+7RfXIjVWfdovq
kRurPu0W1SM3Vn3aPapX7qv6sntUr9xX9WX3qF65r+rL7lG9cl/Vl92jeuW+
qi+7R/XKfVVfdo/qlfuqvuwe1Sv3VX3ZPapX7qv6sntUr9xX9WX3qF65rerD
blI9c1vVh92keua2qg+7SfXMo+562g/9HGbscQ96p7KL7lU986iRBz7qnUqu
uV/1zKNeP/FhL7X9kjWqZx708pmPe6mdRyxUPfOgF0994EvtOmCx6pkHffG5
j3ypHcc7QPXMg77w4Ie+1PLLnaF65kGff/RTX2rt2Y5RPfOgzz38uS+17mRH
qZ550H0vteZcx6meedB9L7XmXMepnnnQfS+15lzHqZ550H0vteZcx6meedB9
L7XmXMepnnnQfS+15lzHqZ550IXvtOhgh6leedCF77ToYIepXnnQhe+06GCH
qV550J3vtOhmB6leeFSzl1p0zf2qhxzU8qU+b82tV6healDLl8qypoxOU/d8
q51WtHPL0k1f63g9dn6jnjtejB3ey0dBfPJ2PQoi/Bd91c9PqWg+CnqyhHoE
9Fg59SjoofLyUdDzpNYjoMfJ7kdAz5Lej4AeRT9E6IcI/RChH2LkQ4x8CFEP
MeohRD6EqIcY+RCiHmLUQ4h8CFEPIfIhQj5E6IcI/RChHyL0Q4R+iNAPEfoh
4qB+VHqhE/rxW3ev4n5qgiVNZT9V0ZKnqp/CbEn02XstPeRctRI61+dPte6I
8/Uo6FRfOtOaE75Xj4LO9OUT5R/w/XoUdKJX58k9X6weAZ3n5W0yrxfOR0Gn
GbhL1u0y6lHQYYZuknG4rHoEdKH43RLzEdDjpNajoKdJz0dAT7IgHwE9x5J8
BPQUi/IR0DMsy0dAT7AwHwH1tzQfAXW3OB/9NLe6HwG1tjwfAXW2IR8B9bUl
H/10tScfAXW1qx8BtbQtH/10tC8fAXWkHwJ25iOgfvRDwN58BNSNfgjYnY+A
etEPAfvzEVAn+iFCPwRU5COgPvRDQE0++ulCP0QU9SOgHqry0U8P+iGirB8B
taAfAury0U8H+iFCP0Toh4DCfPTTQGU/ArqffojQDxH6IUI/BJTmo5/r6YcI
/RChHyL0Q4R+iNAPIfohQj9E6IcI+RChHyL0Q4R+iNAPEfohRD9EyIcI/RCh
HyL0Q4h+iJAPEfohQj+EyIcI/RAhHyL0Q4h+iJAPIfohQj6E6IcI+RCiHyIO
z2f+IyLfxryN+UxedP83Mi/jSmuOWfGdTEs504JT1nwr05IOlX3Jmm9lWtKh
kg9Z9b1MSztV5hnLvphZaadKPGPdNzMt8VhJRyz8auZlnivlhqVfzrTUe8Uv
WPvtzMu9WPSA1d/PrOSLxc5X/wTMSr/Z+8c74BGYln+1d293xEMwa8HZ3rrc
GU/BtEMOt+IxBLTDEWfLf4g3H4R59VdLfoLIozCv/GSZDxB+GKYVXyzv61Me
h2m198r69qznYV7htTK+OvmRmFZ2qoRK8h+KeUWHSiol/bmYVnGlxFaSn4x5
+2+U3EvuwzFt84EWFJP5eLxh53WWdZP3iMzbdZnF7SQ9Je/YcJQN+Qio1Np7
bOlHQOUWHWJPPvrpalM/AuppVz76aWlbPvppaV8/AmpoYz4Cakg/O7R9/635
dBzwleYj6GedBwyxq5tuu730jC1W19JxswGPWWNhKF0ne+lBeywJpPFeAx61
SHocved67VmTpGbRfawRz9oksYn+Yw142ihJOTxiq9cet0pCCA9ZasTzZkl4
44cs9doDZ8l55QcMNeCBw6S9cvOdRjxxmMR37jzTiCcuk/rOfWca8chlkl+6
6UojHjlN+ku3XGnEM6dZ8Nb9RhryyG1WvPSs6g1yPHOaJW89qXqDFA/dZtFr
T6neIMNTx1n23hOqN8jw1HGWvfeE6g0SPHadhS8+rHqDuAfPs/TVx1RPEPfg
eZa+eoN9Rjx6oMUvf/s8A5490Oq3v3udEQ+faPnr3zzOgKdPtP79791mxONH
2jDApcuMsNKOBe5cZoSZ/PmdCDvpJ8BOH/78coClPvQTYKlPNq1w1yhDTPXJ
phWu2mSIrX6wa4ebNhlhrB9s2+GaRcZY60fbhrhmkSHW+tG2IW4ZZIi5/mPf
FJcMMsJc/7Fvijv2GGKwn2zc4oY5hhjsJxu3uGCNMRb7LxvHuGCNERb7H8aY
tG+wKyazxaRtg92xmS0mbRvsks1MMWfTXteMZoo5m/a6ZzRLTNky11WrWWLG
jrXuWs0QUzbMddlqhpixfK3rZjPEjOVr3TebHSYsHuvG3ewwYfFYV+5mhnFL
t7p0ODOMW7rVrbuZYdjCqe4dzgzjFm5173BWGLZsqpuXM8KwVVPdvZwVRi1a
6vLljDBszVS3T2eEUUuWun46G4xasVSD6WwwKn+pFtvZYFD6UD2ms8Gg7KG6
bGeDQclDdZnOBoNyh+qznQ0GpQ7VZzobDMocqtN2JhiUN1Sr7WwwKG+oXtuZ
YFDWUM22M8GopKW6bWeDQTlD9dvOBIMyhnrmdo8f4AfyIUI+hOiHEPkQIR9C
5EOIfAiRDyHyIUQ+xKiHEPkQIh9i1EOIeohRDzHqIUY9xKiHIO0QJR7CpAMA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAALDDvwDnYs/9
      "], {{0, 1024.}, {576., 0}}, {0, 1},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Bit", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{576., 1024.},
    PlotRange->{{0, 576.}, {0, 1024.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt2l2KZUkRAOBGRNyGW9AFqFsYVzDC+DQgjA/im0vXsZCe6rr31jn3nsz4
+wI+UYSuyIjMEzHV87u//v27v/3qy5cv//jtf//ju+//+eeffvr+X3/5zc//
44fvf/zD73/8+f/88usvX/70v//y7z8CAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
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
      "], {{0, 1024.}, {576., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{576., 1024.},
    PlotRange->{{0, 576.}, {0, 1024.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt20GunNd1hVHCScPNTCGzcDNupusgA7ARxXBHAeQAQcbmtgfh2ViKjRAi
H4vvL1bVd++5a2GDkAQ2+P5z7tmAAP7z7/7rN//5iw8fPvzxlz/+8pvf/s+v
f/jht//7b//047/8+/d//MPvv//uP/71+//+7vff/fCr3/3Dj//xwz9++PAv
P/7+//tnAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
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
AAAAAAAAAAAAAAAAAAB8i78CpetWTA==
      "], {{0, 1024.}, {576., 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{576., 1024.},
    PlotRange->{{0, 576.}, {0, 1024.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt3U1uBUcVBlALGDBkC+yCIQyZglgAEQExCVJAQqyNMYtgN0RYWOb5ud1d
XT/31j1HLRQQsau+qvfdvGcn+fk3f/nNH3/08vLy15/+8B+/+f3ff/X997//
x29/9sN/+d13f/3zn7779g+//u5v3/7p2+9/8c2Pf/gfX37y8vLLH/7///1j
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK7417//+fCsXhFAUB8Lc8KzetNx
LTkOj8fj8Zx8Vk+JoJafi8fj8XiOn9WDIqiHiJYfk8fj8UR+lvTzzG+ayKpz
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
      "], {{0, 1024.}, {576., 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{576., 1024.},
    PlotRange->{{0, 576.}, {0, 1024.}}]}], "}"}]], "Output",
 CellChangeTimes->{{3.9493807208982677`*^9, 3.9493807362717495`*^9}, 
   3.9493808285236454`*^9, 3.949380986853756*^9, 3.9493810197349625`*^9, 
   3.94938127651626*^9, 3.949381907214117*^9, 3.949382088668455*^9, 
   3.950520968626068*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"bd10bcb7-3dd9-6148-82f3-d16bc282f91d"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.9493804882540035`*^9},ExpressionUUID->"31b31f08-19d6-3741-ad27-\
82e28d2653a3"],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.9488616123659897`*^9},ExpressionUUID->"c32fd680-1993-6247-90b5-\
81e22bc434db"],

Cell[BoxData[{"000000", "\[IndentingNewLine]", "000000", \
"\[IndentingNewLine]", "000000", "\[IndentingNewLine]", 
 RowBox[{"000111", 
  " "}], "\[IndentingNewLine]", "000111", "\[IndentingNewLine]", 
 RowBox[{"000111", " "}]}], "Input",
 CellChangeTimes->{{3.949379362097666*^9, 
  3.9493794341376724`*^9}},ExpressionUUID->"dd22ca08-21f8-7645-81d9-\
6320bc256020"]
},
WindowSize->{1908, 999.75},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification:>1.6 Inherited,
FrontEndVersion->"14.1 for Microsoft Windows (64-bit) (July 16, 2024)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"6b934cfe-6dc3-fc4e-8073-891cda943840"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[576, 22, 3805, 90, 532, "Input",ExpressionUUID->"5ec81625-12b3-498e-865b-ed98c4dc9d0c"],
Cell[4384, 114, 7882, 134, 1665, "Output",ExpressionUUID->"e043a49c-8e2d-4d42-ad42-f312c84b710b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12303, 253, 6252, 146, 928, "Input",ExpressionUUID->"dff829f8-35e2-4f43-ad01-af4bda31e3ac"],
Cell[18558, 401, 8586, 145, 1665, "Output",ExpressionUUID->"90030d4e-3659-3a45-b8e6-d531da7ad54c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27181, 551, 8714, 192, 1171, "Input",ExpressionUUID->"55a5e8ca-9f16-4a93-9918-c24e1c7e6652"],
Cell[35898, 745, 26844, 455, 384, "Output",ExpressionUUID->"bd10bcb7-3dd9-6148-82f3-d16bc282f91d"]
}, Open  ]],
Cell[62757, 1203, 130, 3, 45, "Input",ExpressionUUID->"31b31f08-19d6-3741-ad27-82e28d2653a3"],
Cell[62890, 1208, 149, 3, 75, "Input",ExpressionUUID->"c32fd680-1993-6247-90b5-81e22bc434db"],
Cell[63042, 1213, 366, 7, 197, "Input",ExpressionUUID->"dd22ca08-21f8-7645-81d9-6320bc256020"]
}
]
*)

